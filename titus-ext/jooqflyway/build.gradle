/*
 * Copyright 2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    dependencies {
        classpath 'com.opentable.components:otj-pg-embedded:0.13.+'
    }
}

plugins {
    id "com.revolut.jooq-docker" version "0.3.3"
    id 'org.flywaydb.flyway' version '5.2.4'
}

ext.flywayVersion = '6.1.+'
ext.jooqVersion = '3.13.2'
ext.psql = '42.2.8'

dependencies {
    compile project(':titus-common')
    compile project(':titus-api')
    compile project(':titus-supplementary-component-job-activity-history')
    implementation("org.jooq:jooq:${jooqVersion}")
    jdbc("org.postgresql:postgresql:${psql}")

    // DB -  Drivers
    compile "org.postgresql:postgresql:${psql}"

    // DB - jOOQ
    compile "org.jooq:jooq:${jooqVersion}"
    compile "org.jooq:jooq-meta:${jooqVersion}"
    //compile "org.jooq:jooq-meta-extensions:${jooqVersion}"
    compile "org.jooq:jooq-codegen:${jooqVersion}"

    compile 'com.opentable.components:otj-pg-embedded:0.13.+'
    // Hikari DataSource for connection pooling to the DB
    compile 'com.zaxxer:HikariCP:3.2.0'

    testCompile project(':titus-testkit')
}


// Begin: Jooq code generation using EmbeddedPostgres database and Flyway migration
ext.dataSource = null
ext.pg = null
ext.jdbcUrl = ''
ext.jdbcPort = -1
ext.jdbcUser = 'activityuser'
ext.jdbcPassword = 'activitypassword'
ext.flyway = null
ext.jooq = null

tasks {
    generateJooqClasses {
        schemas = ['jobactivity', 'activity']
        basePackageName = 'com.netflix.titus-ext.jooqflyway.generated'
        outputDirectory.set(project.layout.buildDirectory.dir("generated-jooq"))
        inputDirectory.setFrom(project.files("src/main/resources/db/migration"))
        excludeFlywayTable = true
    }
}