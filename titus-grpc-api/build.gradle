plugins {
    id "com.google.protobuf" version "0.8.12"
}

configurations {
    protobuf
    protoPluginDeps {
        description = 'used to resolve grpc versions from recommendations for reference in proto plugin'
    }
}

dependencies {
    protobuf "com.netflix.titus:titus-api-definitions:${titusApiDefinitionsVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "com.google.protobuf:protobuf-java:${protobufVersion}"

    protoPluginDeps "io.grpc:protoc-gen-grpc-java:${grpcVersionOSAware}"
    protoPluginDeps "com.google.protobuf:protoc:${protobufVersionOSAware}"
}

if (project.hasProperty("idlLocal")) {
    tasks.register('copyProtos', Exec) {
        commandLine "/bin/bash", "-c", "cp -R " + new File(buildDir, '../../../titus-api-definitions/src/main/proto/netflix')  + " " + new File(buildDir, "extracted-protos/main")
    }
    afterEvaluate {
        tasks.findByName('extractProto').finalizedBy tasks.copyProtos
    }
}

idea {
    module {
        excludeDirs -= file(buildDir)
        buildDir.listFiles({ d, f -> f != 'generated' } as FilenameFilter).each { excludeDirs += it }
    }
}

sourceSets {
    main {
        java {
            srcDir "${protobuf.generatedFilesBaseDir}/main/grpc"
            srcDir "${protobuf.generatedFilesBaseDir}/main/java"
        }
    }
}

//Grabs the resolved dependency coordinates so we can pass them to the protobuf plugin with the platform-recommended version
def getResolvedDependencyFromProtoPluginDeps(dependency) {
    configurations.protoPluginDeps.resolvedConfiguration.firstLevelModuleDependencies.collect { it.name }.find {
        it.startsWith(dependency)
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersionOSAware}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersionOSAware}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}